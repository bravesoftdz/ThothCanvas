unit TestThLine;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, BaseTestUnit, FMX.Types, FMX.Forms,
  System.UITypes, System.Types, System.SysUtils, FMX.Controls, System.UIConsts;

type
  // #19 캔버스에 선을 추가한다.
  TestTThLine = class(TBaseTestUnit)
  private
  published
    procedure TestItemFactory;

    // #74 마우스 드래그로 시작점과 끝점을 이용해 도형을 그린다.
    procedure TestDrawLineTLtoBR;
    // #75 끝점이 시작점의 앞에 있어도 그려져야 한다.
    procedure TestDrawLineTRtoBL;
    procedure TestDrawLineBLtoTR;
    procedure TestDrawLineBRtoTL;

    // #43 선의 일정간격 내에서도 마우스로 선택되어야 한다.
    procedure TestSelectLineTLtoBR;
    procedure TestSelectLineTRtoBL;
    procedure TestSelectLineOverX;
    procedure TestSelectLineOverY;
//    procedure TestSelectLineOverXY;

    // #76 도형에 마우스 오버시 하이라이트 효과가 나타난다.
    procedure TestLineMouseOverHighlight;

    // #99 선을 넘어서는 일직선 범위를 클릭 시 선이 선택된다.
    procedure BugTestLineOutOfRange;

    // #98 선이 아닌 다른 지역에 대해 선택이 되지 않아야 한다.
    procedure TestLineSelectionRange;

    // #97 수직선, 수평선을 그릴 수 있어야 한다.
    procedure TestLineHorizon;
    procedure TestLineVertical;

    // #77 최소 크기를 갖으며 그리거나 크기조정 시 반영된다.
    procedure TestLineMinumumSize;
  end;

implementation

uses
  FMX.TestLib, ThItem, ThShape, ThItemFactory, ThConsts;

{ TestTThShape }

procedure TestTThLine.TestItemFactory;
var
  Item: TThItem;
begin

  // Not assigned number 0
  Item := ItemFactory.Get(0);
  try
    Check(not Assigned(Item));
  finally
    if Assigned(Item) then
      Item.Free;
  end;

  // 1100 is Rectangle
  Item := ItemFactory.Get(1200);
  try
    Check(Assigned(Item));
  finally
    if Assigned(Item) then
      Item.Free;
  end;
end;

procedure TestTThLine.TestDrawLineTLtoBR;
begin
  // TopLeft > BottomRight
  DrawLine(10, 10, 100, 100);

  Check(TestLib.GetControlPixelColor(FCanvas, 20, 20) = ItemShapeDefaultColor, 'TopLeft > BottomRight - 1');
  Check(TestLib.GetControlPixelColor(FCanvas, 90, 90) = ItemShapeDefaultColor, 'TopLeft > BottomRight - 2');
end;

procedure TestTThLine.TestDrawLineTRtoBL;
begin
//  DebugShowForm;

  // TopRight > BottomLeft
  DrawLine(100, 10, 10, 100);

  Check(TestLib.GetControlPixelColor(FCanvas, 90, 20) = ItemShapeDefaultColor, 'TopRight > BottomLeft - 1');
  Check(TestLib.GetControlPixelColor(FCanvas, 20, 90) = ItemShapeDefaultColor, 'TopRight > BottomLeft - 2');

end;

procedure TestTThLine.TestDrawLineBLtoTR;
begin
//  DebugShowForm;

  // BottomLeft > TopRight
  DrawLine(10, 100, 100, 10);

  Check(TestLib.GetControlPixelColor(FCanvas, 20, 90) = ItemShapeDefaultColor, 'BottomLeft > TopRight - 1');
  Check(TestLib.GetControlPixelColor(FCanvas, 90, 20) = ItemShapeDefaultColor, 'BottomLeft > TopRight - 2');
end;

procedure TestTThLine.TestDrawLineBRtoTL;
begin
//  DebugShowForm;

  // BottomRight > TopLeft
  DrawLine(100, 100, 10, 10);

  Check(TestLib.GetControlPixelColor(FCanvas, 20, 20) = ItemShapeDefaultColor, 'BottomRight > TopLeft - 1');
  Check(TestLib.GetControlPixelColor(FCanvas, 90, 90) = ItemShapeDefaultColor, 'BottomRight > TopLeft - 2');
end;

procedure TestTThLine.TestSelectLineTLtoBR;
begin
  DrawLine(10, 10,100, 100);

  TestLib.RunMouseClick(50, 50);

  Check(Assigned(FCanvas.SelectedItem));
end;

procedure TestTThLine.TestSelectLineTRtoBL;
begin
//  DebugShowForm;

  DrawLine(100, 10,10, 100);

  TestLib.RunMouseClick(55, 55);

  Check(Assigned(FCanvas.SelectedItem));
end;

procedure TestTThLine.TestSelectLineOverX;
begin
  DrawLine(10, 10,100, 20);

  TestLib.RunMouseClick(9, 11);

  Check(Assigned(FCanvas.SelectedItem));
end;

procedure TestTThLine.TestSelectLineOverY;
begin
  DrawLine(10, 10,100, 20);

  TestLib.RunMouseClick(11, 9);

  Check(Assigned(FCanvas.SelectedItem));
end;
{
// 사용성 측면에서 범위 밖에서 클릭하지 않는게 좋을 것 같음
procedure TestTThLine.TestSelectLineOverXY;
begin
  DrawLine(10, 10,100, 20);

  TestLib.RunMouseClick(9, 9);
  Check(Assigned(FCanvas.SelectedItem), '9,9');

  TestLib.RunMouseClick(150, 150);
  TestLib.RunMouseClick(101, 21);
  Check(Assigned(FCanvas.SelectedItem), '101,21');
end;
}

procedure TestTThLine.TestLineMouseOverHighlight;
var
  AC: TAlphaColor;
begin
  // 추가
  DrawLine(10, 10, 100, 100);
  // 선택
  TestLib.RunMouseClick(50, 50);

  FCanvas.BackgroundColor := claPink;

  // 선택해제
  TestLib.RunMouseClick(150, 150);
  AC := TestLib.GetControlPixelColor(FCanvas, 100 + (ItemHighlightSize - 1), 100 + (ItemHighlightSize - 1));
  Check(AC <> ItemHighlightColor, 'Color is not highlight color');

  MousePath.New
  .Add(150, 150)
  .Add(50, 50);
  TestLib.RunMouseMove(MousePath.Path);

  // 그림자 확인
  AC := TestLib.GetControlPixelColor(FCanvas, 100 + (ItemHighlightSize - 1), 100 + (ItemHighlightSize - 1));
  Check(AC = ItemHighlightColor, 'Not matching Color');
//  Check(AC = claGray, 'Not matching Color');
end;

procedure TestTThLine.BugTestLineOutOfRange;
begin
  // 추가
  DrawLine(10, 10, 100, 100);

  // 영역외 선택
  TestLib.RunMouseClick(150, 150);

  Check(not Assigned(FCanvas.SelectedItem), 'Out of range');

  // 선택
  TestLib.RunMouseClick(50, 50);

  // 선택해제
  TestLib.RunMouseClick(150, 150);

  Check(not Assigned(FCanvas.SelectedItem), 'Unselect');
end;

procedure TestTThLine.TestLineSelectionRange;
begin
  // 추가
  DrawLine(10, 10, 100, 100);

  // 선택 범위 외 선택
  TestLib.RunMouseClick(60, 50);
  CheckNull(FCanvas.SelectedItem, 'Invalid select area');

  // 선택
  TestLib.RunMouseClick(50, 50);
//  CheckTrue(Assigned(FCanvas.SelectedItem));
  CheckNotNull(FCanvas.SelectedItem);
end;

procedure TestTThLine.TestLineHorizon;
begin
  // 추가
  DrawLine(10, 10, 100, 10);

  TestLib.RunMouseClick(60, 10);
  CheckNotNull(FCanvas.SelectedItem);
end;

procedure TestTThLine.TestLineVertical;
begin
  // 추가
  DrawLine(10, 10, 12, 100);

  TestLib.RunMouseClick(10, 60);
  CheckNotNull(FCanvas.SelectedItem);
end;

procedure TestTThLine.TestLineMinumumSize;
begin
  DebugShowForm;

  // 추가
  DrawLine(10, 10, 20, 10);

  TestLib.RunMouseClick(ItemMinimumSize-1, 10);

  CheckNotNull(FCanvas.SelectedItem);
end;

initialization
  RegisterTest(TestTThLine.Suite);

end.

