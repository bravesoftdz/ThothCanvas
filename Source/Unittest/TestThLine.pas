unit TestThLine;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, BaseTestUnit, FMX.Types, FMX.Forms,
  System.UITypes, System.Types, System.SysUtils, FMX.Controls, System.UIConsts;

type
  // #19 캔버스에 선을 추가한다.
  TestTThLine = class(TBaseTestUnit)
  private
  published
    procedure TestItemFactory;

    // #74 마우스 드래그로 시작점과 끝점을 이용해 도형을 그린다.
    procedure TestDrawLineTLtoBR;
    // #75 끝점이 시작점의 앞에 있어도 그려져야 한다.
    procedure TestDrawLineTRtoBL;
    procedure TestDrawLineBLtoTR;
    procedure TestDrawLineBRtoTL;

    // #43 선의 일정간격 내에서도 마우스로 선택되어야 한다.
    procedure TestSelectLineTLtoBR;
    procedure TestSelectLineTRtoBL;
  end;

implementation

uses
  FMX.TestLib, ThItem, ThShape, ThItemFactory, ThConsts;

{ TestTThShape }

procedure TestTThLine.TestItemFactory;
var
  Item: TThItem;
begin

  // Not assigned number 0
  Item := ItemFactory.Get(0);
  try
    Check(not Assigned(Item));
  finally
    if Assigned(Item) then
      Item.Free;
  end;

  // 1100 is Rectangle
  Item := ItemFactory.Get(1200);
  try
    Check(Assigned(Item));
  finally
    if Assigned(Item) then
      Item.Free;
  end;
end;

procedure TestTThLine.TestDrawLineTLtoBR;
begin
  // TopLeft > BottomRight
  DrawLine(10, 10, 100, 100);

  Check(TestLib.GetControlPixelColor(FCanvas, 20, 20) = ItemShapeDefaultColor, 'TopLeft > BottomRight - 1');
  Check(TestLib.GetControlPixelColor(FCanvas, 90, 90) = ItemShapeDefaultColor, 'TopLeft > BottomRight - 2');
end;

procedure TestTThLine.TestDrawLineTRtoBL;
begin
  DebugShowForm;

  // TopRight > BottomLeft
  DrawLine(100, 10, 10, 100);

  Check(TestLib.GetControlPixelColor(FCanvas, 90, 20) = ItemShapeDefaultColor, 'TopRight > BottomLeft - 1');
  Check(TestLib.GetControlPixelColor(FCanvas, 20, 90) = ItemShapeDefaultColor, 'TopRight > BottomLeft - 2');

end;

procedure TestTThLine.TestDrawLineBLtoTR;
begin
//  DebugShowForm;

  // BottomLeft > TopRight
  DrawLine(10, 100, 100, 10);

  Check(TestLib.GetControlPixelColor(FCanvas, 20, 90) = ItemShapeDefaultColor, 'BottomLeft > TopRight - 1');
  Check(TestLib.GetControlPixelColor(FCanvas, 90, 20) = ItemShapeDefaultColor, 'BottomLeft > TopRight - 2');
end;

procedure TestTThLine.TestDrawLineBRtoTL;
begin
//  DebugShowForm;

  // BottomRight > TopLeft
  DrawLine(100, 100, 10, 10);

  Check(TestLib.GetControlPixelColor(FCanvas, 20, 20) = ItemShapeDefaultColor, 'BottomRight > TopLeft - 1');
  Check(TestLib.GetControlPixelColor(FCanvas, 90, 90) = ItemShapeDefaultColor, 'BottomRight > TopLeft - 2');
end;

procedure TestTThLine.TestSelectLineTLtoBR;
begin
  DrawLine(10, 10,100, 100);

  TestLib.RunMouseClick(50, 50);

  Check(Assigned(FCanvas.SelectedItem));
end;

procedure TestTThLine.TestSelectLineTRtoBL;
begin
//  DebugShowForm;

  DrawLine(100, 10,10, 100);

  TestLib.RunMouseClick(55, 55);

  Check(Assigned(FCanvas.SelectedItem));
end;

initialization
  RegisterTest(TestTThLine.Suite);

end.

