unit TestThShape;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, BaseTestUnit, ThContainer, ThCanvasEditor,
  System.UITypes, System.Types, System.SysUtils, FMX.Controls, FMX.Forms;

type
  TestTThShape = class(TBaseTestUnit)
  private
    FTestClick: Boolean;
    procedure _Test(Sender: TObject);
  published
    procedure TestItemFactory;

    // #36 마우스 드래그로 시작점과 끝점을 이용해 도형을 그린다.
    procedure TestDrawRectangle;

    // #54 캔버스 트래킹 이후 마우스 드래그 시 드래그한 위치에 그려져야 한다.
    procedure TestCanvasTrackingAndDrawRectangle;

    // #53 캔버스 Tracking 시 Rectangle이 Canvas 영역 밖으로 나오지 않는다.
    procedure TestRectangleOutOfCanvas;
  end;

implementation

uses
  FMX.TestLib, ThItem, ThShape, ThItemFactory;

{ TestTThShape }

procedure TestTThShape.TestItemFactory;
var
  Item: TThItem;
begin
  // Not assigned number 0
  Item := ItemFactory.Get(0);
  try
    Check(not Assigned(Item));
  finally
    if Assigned(Item) then
      Item.Free;
  end;

  // 1100 is Rectangle
  Item := ItemFactory.Get(1100);
  try
    Check(Assigned(Item));
  finally
    if Assigned(Item) then
      Item.Free;
  end;
end;

procedure TestTThShape.TestDrawRectangle;
begin
  FCanvas.ItemID := 1100;   // 1100 is Rectangles ID

  // Draw
  MousePath.Clear;
  MousePath.SetInitialPoint(GetInitialPoint);
  MousePath.Add(50, 50);
  MousePath.Add(100, 100);
  MousePath.Add(100, 150);
  MousePath.Add(150, 150);
  MousePath.Add(200, 200);

  TestLib.RunMousePath(MousePath.Path);

  // Select
//  TestLib.MouseDown(TMouseButton.mbLeft, [], P.X + 100, P.Y + 100);
//  TestLib.MouseUp(TMouseButton.mbLeft, [], P.X + 100, P.Y + 100);

  Check(Assigned(FCanvas.SelectedItem) and (FCanvas.SelectedItem.ClassType = TThRectangle));

  Check(FCanvas.SelectedItem.Position.X = 50);
  Check(FCanvas.SelectedItem.Width = 150);
end;

// S1.100,50 으로 Canvas 이동 후 100, 100 Rectangle 그리면
//    Rectangle의 좌표는 -100, -50 이어야 한다.
procedure TestTThShape.TestCanvasTrackingAndDrawRectangle;
begin
  // Tracking
  MousePath.Clear;
  MousePath.SetInitialPoint(GetInitialPoint);
  MousePath.Add(0, 0);
  MousePath.Add(100, 50);
  TestLib.RunMousePath(MousePath.Path);

  // Draw Rectangle
  FCanvas.ItemID := 1100;
  MousePath.Clear;
  MousePath.SetInitialPoint(GetInitialPoint);
  MousePath.Add(0, 0);
  MousePath.Add(100, 100);
  TestLib.RunMousePath(MousePath.Path);

  Check(FCanvas.SelectedItem.Position.X = -100, Format('Postion.X : %f', [FCanvas.SelectedItem.Position.X]));
  Check(FCanvas.SelectedItem.Position.Y = -50, Format('Postion.Y : %f', [FCanvas.SelectedItem.Position.Y]));
end;

// S1.0,0에 Rectangle을 그리고 -100, -100 이동한 후
//    -30, -30을 클릭하면 그영역에 있는 버튼이 클릭되야 한다.
procedure TestTThShape.TestRectangleOutOfCanvas;
var
  Button: TButton;
begin
  Button := TButton.Create(FForm);
  Button.Parent := FForm;
  Button.Position.Point := PointF(0,0);
  Button.OnClick := _Test;
  Button.Width := 50;
  Button.Height := 100;
  Button.SendToBack;

  // Draw Rectangle
  FCanvas.ItemID := 1100;
  MousePath.Clear;
  MousePath.SetInitialPoint(GetInitialPoint);
  MousePath.Add(10, 10);
  MousePath.Add(100, 100);
  MousePath.Add(150, 150);
  TestLib.RunMousePath(MousePath.Path);

  Application.ProcessMessages;
  Sleep(1000);

  // Canvas Tracking
  MousePath.Clear;
  MousePath.SetInitialPoint(GetInitialPoint);
  MousePath.Add(160, 160);
  MousePath.Add(80, 80);
  MousePath.Add(60, 60);
  TestLib.RunMousePath(MousePath.Path);

  Application.ProcessMessages;
  Sleep(1000);

  // Button Click
  FTestClick := False;
  MousePath.Clear;
  MousePath.SetInitialPoint(GetInitialPoint);
  MousePath.Add(-30, -30);
  MousePath.Add(-30, -30);
  MousePath.Add(-30, -30);
  TestLib.RunMousePath(MousePath.Path);

//  FCanvas.SelectedItem.BringToFront;


//  Check(FCanvas.SelectedItem.LocalToAbsolute(PointF(0, 0)).X = -30, Format('Postion.X : %f', [FCanvas.SelectedItem.LocalToAbsolute(PointF(0, 0)).X]));
  Check(FTestClick, '버튼이 클릭되지 않음');
end;

procedure TestTThShape._Test(Sender: TObject);
begin
  FTestClick := True;
end;

initialization
  RegisterTest(TestTThShape.Suite);

end.

