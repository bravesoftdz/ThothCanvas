unit TestThItemResizabler;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, BaseTestUnit, FMX.Types, FMX.Forms,
  System.UITypes, System.Types, System.SysUtils, FMX.Controls, System.UIConsts;


type
  TestTThItemResizabler = class(TBaseTestUnit)
  private
    procedure DrawRectangle(Left, Top, Right, Bottom: Single); overload;
    procedure DrawRectangle(R: TRectF); overload;
  published
    // #81 사각형 선택 시 4개의 ResizableSpot이 표시되야 한다.
    procedure TestShowResizableSpot;

    // #41 ResizableSpot을 드래그하여 크기를 변경 할 수 있다.
    procedure TestResizableRectangle;
    procedure TestResizableRectangleTLtoBROver;
    procedure TestResizableRectangleTLtoRightOver;
    procedure TestResizableRectangleTLtoBottomOver;
    procedure TestResizableRectangleTRtoBLOver;
    procedure TestResizableRectangleBLtoTROver;
    procedure TestResizableRectangleBRtoTLOver;

    // #83 ResizableSpot의 이동 전후 마우스커서 위치가 ResizableSpot한해 동일 해야 한다.
    procedure TestResizableSpotSamePosition;

  end;
implementation

uses
  FMX.TestLib, ThItem, ThShape, ThItemFactory, ThConsts;

{ TestTThItemResizabler }

procedure TestTThItemResizabler.DrawRectangle(Left, Top, Right, Bottom: Single);
begin
  DrawRectangle(RectF(Left, Top, Right, Bottom));
end;

procedure TestTThItemResizabler.DrawRectangle(R: TRectF);
begin
  FCanvas.DrawItemID := 1100;   // 1100 is Rectangles ID
  MousePath.New
  .Add(R.TopLeft)
  .Add(R.CenterPoint)
  .Add(R.BottomRight);
  TestLib.RunMousePath(MousePath.Path);
end;

procedure TestTThItemResizabler.TestShowResizableSpot;
begin
  DrawRectangle(RectF(10, 10, 160, 160));
  TestLib.RunMouseClick(100, 100);

  // ResizableSpot 표시 확인
  Check(TestLib.GetControlPixelColor(FCanvas, 10, 10) = ItemResizableSpotOutColor, Format('Not matching color TopLeft(%d, %d)', [TestLib.GetControlPixelColor(FCanvas, 10, 10), ItemResizableSpotOutColor]));
  Check(TestLib.GetControlPixelColor(FCanvas, 10, 160) = ItemResizableSpotOutColor, 'Not matching color BottomLeft');
  Check(TestLib.GetControlPixelColor(FCanvas, 160, 10) = ItemResizableSpotOutColor, 'Not matching color TopRight');
  Check(TestLib.GetControlPixelColor(FCanvas, 160, 160) = ItemResizableSpotOutColor, 'Not matching color BottomRight');
end;

procedure TestTThItemResizabler.TestResizableRectangle;
begin
  // 그리기
  DrawRectangle(RectF(50, 50, 150, 150));
  TestLib.RunMouseClick(100, 100);

  //크기 조정
  MousePath.New
  .Add(150, 150)
  .Add(180, 180)
  .Add(200, 200);
  TestLib.RunMousePath(MousePath.Path);

  TestLib.RunMouseClick(180, 180);
  Check(Assigned(FCanvas.SelectedItem), 'Not assigned');
  Check(FCanvas.SelectedItem.Width = 150, Format('Width : %f', [FCanvas.SelectedItem.Width]));
end;

procedure TestTThItemResizabler.TestResizableRectangleTLtoBROver;
begin
  // 그리기
  DrawRectangle(RectF(50, 50, 150, 150));
  TestLib.RunMouseClick(100, 100);

  //크기 조정
  MousePath.New
  .Add(50, 50)
  .Add(220, 220)
  .Add(250, 250);
  TestLib.RunMousePath(MousePath.Path);

  TestLib.RunMouseClick(180, 180);
  Check(Assigned(FCanvas.SelectedItem), 'Not assigned');
  Check(
    (FCanvas.SelectedItem.Width = 100) and (FCanvas.SelectedItem.Height = 100),
    Format('W: %f, H: %f', [FCanvas.SelectedItem.Width, FCanvas.SelectedItem.Height])
  );
end;

procedure TestTThItemResizabler.TestResizableRectangleTLtoRightOver;
begin
  // 그리기
  DrawRectangle(RectF(50, 50, 150, 150));
  TestLib.RunMouseClick(100, 100);

  //크기 조정(150, 60, 250, 150)
  MousePath.New
  .Add(50, 50)
  .Add(180, 55)
  .Add(250, 60);
  TestLib.RunMousePath(MousePath.Path);

  TestLib.RunMouseClick(180, 100);
  Check(Assigned(FCanvas.SelectedItem), 'Not assigned');
  Check(
    (FCanvas.SelectedItem.Width = 100) and (FCanvas.SelectedItem.Height = 90),
    Format('W: %f, H: %f', [FCanvas.SelectedItem.Width, FCanvas.SelectedItem.Height])
  );
end;

procedure TestTThItemResizabler.TestResizableRectangleTLtoBottomOver;
begin
  // 그리기
  DrawRectangle(RectF(50, 50, 150, 150));
  TestLib.RunMouseClick(100, 100);

  //크기 조정(60, 150, 150, 250)
  MousePath.New
  .Add(50, 50)
  .Add(180, 180)
  .Add(60, 250);
  TestLib.RunMousePath(MousePath.Path);

  TestLib.RunMouseClick(100, 180);
  Check(Assigned(FCanvas.SelectedItem), 'Not assigned');
  Check(
    (FCanvas.SelectedItem.Width = 90) and (FCanvas.SelectedItem.Height = 100),
    Format('W: %f, H: %f', [FCanvas.SelectedItem.Width, FCanvas.SelectedItem.Height])
  );
end;

procedure TestTThItemResizabler.TestResizableRectangleTRtoBLOver;
begin
  // 그리기
  DrawRectangle(RectF(150, 50, 250, 150));
  TestLib.RunMouseClick(200, 100);

  //크기 조정(60, 150, 150, 250)
  MousePath.New
  .Add(250, 50)
  .Add(180, 180)
  .Add(60, 250);
  TestLib.RunMousePath(MousePath.Path);

  TestLib.RunMouseClick(100, 200);
  Check(Assigned(FCanvas.SelectedItem), 'Not assigned');
  Check(
    (FCanvas.SelectedItem.Width = 90) and (FCanvas.SelectedItem.Height = 100),
    Format('W: %f, H: %f', [FCanvas.SelectedItem.Width, FCanvas.SelectedItem.Height])
  );
end;

procedure TestTThItemResizabler.TestResizableRectangleBLtoTROver;
begin
  // 그리기
  DrawRectangle(RectF(50, 150, 150, 250));
  TestLib.RunMouseClick(100, 200);

  //크기 조정(150, 60, 250, 250)
  MousePath.New
  .Add(50, 250)
  .Add(50, 100)
  .Add(40, 250)
  .Add(250, 60);
  TestLib.RunMousePath(MousePath.Path);

  TestLib.RunMouseClick(200, 100);
  Check(Assigned(FCanvas.SelectedItem), 'Not assigned');
  Check(
    (FCanvas.SelectedItem.Width = 100) and (FCanvas.SelectedItem.Height = 190),
    Format('W: %f, H: %f', [FCanvas.SelectedItem.Width, FCanvas.SelectedItem.Height])
  );
end;

procedure TestTThItemResizabler.TestResizableRectangleBRtoTLOver;
begin
  // 그리기
  DrawRectangle(RectF(150, 150, 250, 250));
  TestLib.RunMouseClick(200, 200);

  //크기 조정(150, 60, 250, 250)
  MousePath.New
  .Add(250, 250)
  .Add(200, 80)
  .Add(70, 80)
  .Add(50, 60);
  TestLib.RunMousePath(MousePath.Path);

  TestLib.RunMouseClick(120, 100);
  Check(Assigned(FCanvas.SelectedItem), 'Not assigned');
  Check(
    (FCanvas.SelectedItem.Width = 100) and (FCanvas.SelectedItem.Height = 90),
    Format('W: %f, H: %f', [FCanvas.SelectedItem.Width, FCanvas.SelectedItem.Height])
  );
end;

// S1 - Spot의 최좌측을 이용해 크기조정
//      1> 이동된 포인터의 X-1 좌표의 색상 확인
//      2> Width 크기변화 확인 100에서 10이동
procedure TestTThItemResizabler.TestResizableSpotSamePosition;
var
  SP, EP: TPointF;
  C: TAlphaColor;
begin
//  FClosing := False;

  // 그리기
  DrawRectangle(RectF(50, 50, 150, 150));
  TestLib.RunMouseClick(100, 100);

  TestLib.RunMouseMove([PointF(150, 150)]);
  SP := PointF(150 - ItemResizableSpotRadius+1, 150);
  EP := SP;
  EP.Offset(10, 10);

  Check(TestLib.GetControlPixelColor(FCanvas, SP.X, SP.Y) = ItemResizableSpotOverColor, 'Spot color');
  //크기 조정
  MousePath.New
  .Add(SP)
  .Add(180, 180)
  .Add(EP);
  TestLib.RunMousePath(MousePath.Path);

  // 1> 색상확인
  C := TestLib.GetControlPixelColor(FCanvas, EP.X-1, EP.Y);
  Check(C <> ItemResizableSpotOverColor);

  // 2> 크기확인
  Check(Assigned(FCanvas.SelectedItem), 'Not assigned');
  Check(FCanvas.SelectedItem.Width = 110, Format('Width : %f', [FCanvas.SelectedItem.Width]));
end;

initialization
  RegisterTest(TestTThItemResizabler.Suite);

end.

