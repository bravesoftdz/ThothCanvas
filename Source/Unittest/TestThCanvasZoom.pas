unit TestThCanvasZoom;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, BaseTestUnit,
  System.Types, System.SysUtils, FMX.Types, FMX.Objects, System.UIConsts;

type
  // Test methods for class TThInterfacedObject

  TestTThCanvasZoom = class(TBaseTestUnit)
  published
    // #191 지정된 비율로 캔버스가 확대/축소 되어야 한다.
    procedure TestZoomBasic;

    // #192 Zoom 되도 ResizeSpot 및 Highlight의 크기는 변경되지 않아야 한다.
    procedure TestZoomAndSpotSizeMaintain;
    procedure TestZoomAndHighlightSizeMaintain;

    // #189 캔버스 선택(클릭) 후 마우스 휠을 올리면 확대, 내리면 축소가 되어야 한다.
    procedure TestZoomWithWheel;
  end;

implementation

uses
  FMX.TestLib, ThItem, ThShape, ThItemFactory, ThConsts, UITypes;

{ TestTThCanvasZoom }

procedure TestTThCanvasZoom.TestZoomBasic;
begin
  DrawRectangle(50, 50, 150, 150);

  FCanvas.ZoomIn;
  Check(FCanvas.ZoomScale > 1, Format('ZoomIn: %f', [FCanvas.ZoomScale]));

  FCanvas.ZoomOut;
  FCanvas.ZoomOut;
  Check(FCanvas.ZoomScale < 1, Format('ZoomOt: %f', [FCanvas.ZoomScale]));
end;

procedure TestTThCanvasZoom.TestZoomAndSpotSizeMaintain;
var
  l: single;
  AC: TAlphaColor;
begin
  DrawRectangle(50, 50, 150, 150);

  AC := TestLib.GetControlPixelColor(FCanvas, 50-ItemResizeSpotRadius+1, 50);
  Check(AC = ItemResizeSpotOutColor, Format('Not matching color Orginal(%d, %d)', [AC, ItemResizeSpotOutColor]));

  FCanvas.ZoomOut;
  FCanvas.ZoomOut;

  // 구현은 되었으나 테스트에서 오류
  l := 50 * FCanvas.ZoomScale;
  AC := TestLib.GetControlPixelColor(FCanvas, l-ItemResizeSpotRadius+1, l);
//  AC := TestLib.GetControlPixelColor(FCanvas, 50-ItemResizeSpotRadius+2, 50);
  Check(AC = ItemResizeSpotOutColor, Format('[Left: %f] Not matching color ZoomOut(%d, %d)', [l, AC, ItemResizeSpotOutColor]));
end;

procedure TestTThCanvasZoom.TestZoomAndHighlightSizeMaintain;
var
  l, c: single;
  AC: TAlphaColor;
begin
  DrawRectangle(50, 50, 150, 150);
  TestLib.RunMouseMove(MousePath.New.Add(100, 100).Path);

  AC := TestLib.GetControlPixelColor(FCanvas, 150+ItemHighlightSize-1, 100);
  Check(AC = ItemHighlightColor, Format('Not matching color Orginal(%d, %d)', [AC, ItemHighlightColor]));

  FCanvas.ZoomOut;
  FCanvas.ZoomOut;

  // 구현은 되었으나 테스트에서 오류
  l := 150 * FCanvas.ZoomScale;
  c := 100 * FCanvas.ZoomScale;
  AC := TestLib.GetControlPixelColor(FCanvas, Trunc(l)+ItemHighlightSize-1, Trunc(c));
  Check(AC = ItemHighlightColor, Format('[Left: %f] Not matching color ZoomOut(%d, %d)', [l, AC, ItemHighlightColor]));
Exit;
end;

procedure TestTThCanvasZoom.TestZoomWithWheel;
begin

end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTThCanvasZoom.Suite);
end.

